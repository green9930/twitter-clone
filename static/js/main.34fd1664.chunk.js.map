{"version":3,"sources":["theme/theme.js","styles/mixin.js","components/AuthForm.js","routes/Auth.js","myFirebase.js","components/TweetEditor.js","components/Tweet.js","components/TweetForm.js","routes/Home.js","components/Navigation.js","components/UnauthenticatedNav.js","routes/Profile.js","components/Router.js","components/Footer.js","components/App.js","styles/GlobalStyle.js","index.js"],"names":["calcRem","size","colors","deviceSizes","a11yHidden","overflow","position","clip","clipPath","width","height","margin","border","padding","whiteSpace","AuthFormContainer","styled","form","AuthItemContainer","div","AuthItemInput","input","AuthSubmitInput","ErrorMessageContainer","AuthForm","newAccount","useState","email","setEmail","password","setPassword","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","auth","getAuth","createUserWithEmailAndPassword","then","userCredential","user","console","log","signInWithEmailAndPassword","message","htmlFor","className","type","placeholder","required","ToggleAccountDisplay","p","LogInMethodContainer","LogInMethod","button","Auth","setNewAccount","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","onClick","prev","icon","faGoogle","faGithub","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","dbService","getFirestore","storageService","getStorage","EditorInput","TweetEditor","setNewTweet","newTweet","id","EditContainer","UpdateContainer","UpdateBtnContainer","CancelBtn","MessageContainer","TextContainer","ImageContainer","BtnContainer","Tweet","userObj","isOwner","editing","setEditing","userRef","doc","urlRef","ref","imageUrl","onDeleteClick","window","confirm","deleteDoc","deleteObject","toggleEditing","updateDoc","tweet","faSyncAlt","faPlus","src","alt","faTrash","faEdit","TweetFormContainer","MentionContainer","ImageUploadContainer","MentionInput","SubmitBtnContainer","SelectedImageContainer","ClearBtn","TweetForm","setTweet","imgFile","setImgFile","fileRef","uid","v4","uploadString","response","getDownloadURL","newTweetPosting","createAt","Date","now","creatorId","addDoc","collection","docRef","maxLength","faTwitter","accept","myImage","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","HomeContainer","TweetContainer","ul","Home","tweets","setTweets","useEffect","q","query","orderBy","onSnapshot","snapshot","tweetArr","docs","map","data","twt","NavList","NavItemContainer","li","IconContainer","Navigation","to","faUser","displayName","NavContainer","UnauthenticatedNav","color","ProfileContainer","ProfileUpdateContainer","ProfileInput","ProfileUpdateBtn","LogOutBtn","Profile","refreshUser","newDisplayName","setNewDisplayName","navigate","useNavigate","getMyTweets","where","getDocs","forEach","updateProfile","signOut","AppRouter","isLoggedIn","path","element","FooterContainer","footer","Copyright","Footer","ThisYear","getFullYear","href","rel","App","init","setInit","setIsLoggedIn","setUserObj","setNewUserName","onAuthStateChanged","currentUser","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.34fd1664.chunk.js","sourcesContent":["export const calcRem = (size) => `${size / 16}rem`;\n\nexport const colors = {\n  blue: '#1DA1F2',\n  black: '#14171A',\n  darkGray: '#657786',\n  lightGray_01: '#AAB8C2',\n  lightGray_02: '#E1E8ED',\n  lightGray_03: '#F5F8FA',\n  red: '#FF0000',\n  white: `#ffffff`,\n};\n\nexport const fontSizes = {\n  small: calcRem(14),\n  base: calcRem(16),\n  lg: calcRem(18),\n  xl: calcRem(24),\n  xxl: calcRem(28),\n  xxxl: calcRem(30),\n  titleBase: calcRem(45),\n  titleLarge: calcRem(50),\n};\n\nexport const deviceSizes = {\n  mobile: '576px',\n  tablet: '768px',\n  desktop: '1200px',\n};\n\nexport const device = {\n  mobile: `@media only screen and (max-width: ${deviceSizes.mobile})`,\n  tablet: `@media only screen and (max-width: ${deviceSizes.tablet})`,\n  desktop: `@media only screen and (max-width: ${deviceSizes.desktop})`,\n};\n","export const a11yHidden = {\n  overflow: 'hidden',\n  position: 'absolute',\n  clip: 'rect(0, 0, 0, 0)',\n  clipPath: 'circle(0)',\n  width: '1px',\n  height: ' 1px',\n  margin: '-1px',\n  border: '0',\n  padding: '0',\n  whiteSpace: 'nowrap',\n};\n","import { useState } from 'react';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from 'firebase/auth';\nimport styled from 'styled-components';\nimport { calcRem, colors, deviceSizes } from 'theme/theme';\nimport { a11yHidden } from 'styles/mixin';\n\nconst AuthFormContainer = styled.form`\n  max-width: ${deviceSizes.mobile};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: ${calcRem(8)};\n  margin: 0 ${calcRem(60)};\n\n  .a11y-hidden {\n    ${a11yHidden}\n  }\n`;\n\nconst AuthItemContainer = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  margin: ${calcRem(8)} 0;\n`;\n\nconst AuthItemInput = styled.input`\n  width: 100%;\n`;\n\nconst AuthSubmitInput = styled.input`\n  width: 100%;\n  background: ${colors.blue};\n  color: ${colors.white};\n`;\n\nconst ErrorMessageContainer = styled.div`\n  word-break: break-all;\n  p {\n    color: ${colors.red};\n    white-space: pre-line;\n    width: 100%;\n    font-size: ${calcRem(12)};\n  }\n`;\n\nconst AuthForm = ({ newAccount }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    if (name === 'email') {\n      setEmail(value);\n    } else if (name === 'password') {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const auth = getAuth();\n      if (newAccount) {\n        // create account\n        await createUserWithEmailAndPassword(auth, email, password).then(\n          (userCredential) => {\n            const user = userCredential.user;\n            const password = userCredential.password;\n            console.log(user, password);\n          }\n        );\n      } else {\n        // log in\n        await signInWithEmailAndPassword(auth, email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <>\n      <AuthFormContainer onSubmit={onSubmit}>\n        <AuthItemContainer>\n          <label htmlFor=\"Email\" className=\"a11y-hidden\">\n            Email\n          </label>\n          <AuthItemInput\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            required\n            value={email}\n            onChange={onChange}\n          />\n        </AuthItemContainer>\n        <AuthItemContainer>\n          <label htmlFor=\"password\" className=\"a11y-hidden\">\n            Password\n          </label>\n          <AuthItemInput\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            value={password}\n            onChange={onChange}\n          />\n        </AuthItemContainer>\n        <AuthItemContainer>\n          <AuthSubmitInput\n            type=\"submit\"\n            value={newAccount ? 'Create Account' : 'Sign In'}\n          />\n        </AuthItemContainer>\n      </AuthFormContainer>\n      <ErrorMessageContainer>\n        <p className=\"error\">{error}</p>\n      </ErrorMessageContainer>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import {\n  getAuth,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n  signInWithPopup,\n} from 'firebase/auth';\nimport { useState } from 'react';\nimport AuthForm from 'components/AuthForm';\nimport styled from 'styled-components';\nimport { calcRem, colors } from 'theme/theme';\nimport { faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst ToggleAccountDisplay = styled.p`\n  margin: ${calcRem(16)} 0;\n  color: ${colors.blue};\n  text-align: center;\n  cursor: pointer;\n`;\n\nconst LogInMethodContainer = styled.div`\n  display: flex;\n  padding: ${calcRem(8)};\n  text-align: center;\n  vertical-align: center;\n`;\n\nconst LogInMethod = styled.button`\n  display: flex;\n  width: 100%;\n  margin: 0 ${calcRem(8)};\n  white-space: nowrap;\n  color: ${colors.black};\n  background-color: ${colors.white};\n  border: transparent;\n  border-radius: ${calcRem(16)};\n  justify-content: center;\n  align-items: center;\n\n  .method-icon {\n    margin: ${calcRem(4)};\n  }\n\n  &:hover {\n    background-color: ${colors.darkGray};\n    color: ${colors.white};\n  }\n`;\n\nfunction Auth() {\n  const [newAccount, setNewAccount] = useState(true);\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  const onSocialClick = async (e) => {\n    const { name } = e.target;\n    const auth = getAuth();\n    let provider;\n\n    if (name === 'google') {\n      provider = new GoogleAuthProvider();\n    } else if (name === 'github') {\n      provider = new GithubAuthProvider();\n    }\n\n    await signInWithPopup(auth, provider);\n  };\n  return (\n    <>\n      <AuthForm newAccount={newAccount} />\n      <ToggleAccountDisplay onClick={toggleAccount}>\n        {newAccount ? 'Sign In' : 'Create Account'}\n      </ToggleAccountDisplay>\n      <LogInMethodContainer>\n        <LogInMethod name=\"google\" onClick={onSocialClick}>\n          Continue with Google\n          <FontAwesomeIcon className=\"method-icon\" icon={faGoogle} size=\"1x\" />\n        </LogInMethod>\n        <LogInMethod name=\"github\" onClick={onSocialClick}>\n          Continue with Github\n          <FontAwesomeIcon className=\"method-icon\" icon={faGithub} size=\"1x\" />\n        </LogInMethod>\n      </LogInMethodContainer>\n    </>\n  );\n}\n\nexport default Auth;\n","import { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import styled from 'styled-components';\nimport { calcRem } from 'theme/theme';\n\nconst EditorInput = styled.input`\n  width: 100%;\n  min-height: ${calcRem(80)};\n  max-height: ${calcRem(150)};\n`;\n\nconst TweetEditor = ({ setNewTweet, newTweet }) => {\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewTweet(value);\n  };\n\n  return (\n    <>\n      <label htmlFor=\"tweet-editor\" className=\"a11y-hidden\">\n        Edit yout Tweet\n      </label>\n      <EditorInput\n        id=\"tweet-editor\"\n        type=\"text\"\n        value={newTweet}\n        required\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nexport default TweetEditor;\n","import { useState } from 'react';\nimport { doc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport { storageService, dbService } from 'myFirebase';\nimport { deleteObject, ref } from 'firebase/storage';\nimport TweetEditor from './TweetEditor';\nimport styled from 'styled-components';\nimport { calcRem, colors } from 'theme/theme';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPlus,\n  faTrash,\n  faEdit,\n  faSyncAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nconst EditContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: ${calcRem(16)} ${calcRem(32)};\n`;\n\nconst UpdateContainer = styled.form`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst UpdateBtnContainer = styled.div`\n  color: ${colors.blue};\n  margin: 0 ${calcRem(8)};\n`;\n\nconst CancelBtn = styled.button`\n  background: transparent;\n  color: ${colors.blue};\n  border: transparent;\n  cursor: pointer;\n\n  .icon-x {\n    transform: rotate(45deg);\n    margin: auto 0 auto ${calcRem(8)};\n  }\n`;\n\nconst MessageContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  margin: ${calcRem(16)} ${calcRem(32)};\n  border-radius: ${calcRem(16)};\n  overflow: hidden;\n`;\n\nconst TextContainer = styled.div`\n  background: ${colors.lightGray_03};\n  min-height: ${calcRem(80)};\n  max-height: ${calcRem(150)};\n  padding: ${calcRem(16)};\n  color: ${colors.black};\n  word-break: break-all;\n\n  p {\n    font-size: ${calcRem(18)};\n    white-space: pre-line;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  max-height: ${calcRem(150)};\n  overflow: hidden;\n\n  img {\n    width: 100%;\n    height: auto;\n  }\n`;\n\nconst BtnContainer = styled.div`\n  position: absolute;\n  right: ${calcRem(8)};\n  bottom: ${calcRem(8)};\n\n  button {\n    background: transparent;\n    border: transparent;\n    border-radius: 0;\n    color: ${colors.blue};\n\n    :hover {\n      color: ${colors.black};\n    }\n  }\n`;\n\nconst Tweet = ({ userObj, message, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newTweet, setNewTweet] = useState(message);\n\n  const userRef = doc(dbService, 'tweets', `${userObj.id}`);\n  const urlRef = ref(storageService, userObj.imageUrl);\n\n  const onDeleteClick = async () => {\n    const confirming = window.confirm(\n      'Are you sure you want to delete this tweet?'\n    );\n\n    if (confirming) {\n      await deleteDoc(userRef);\n      await deleteObject(urlRef);\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(newTweet, userObj);\n    await updateDoc(userRef, {\n      tweet: newTweet,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <li key={userObj.id}>\n      {editing ? (\n        <EditContainer>\n          <UpdateContainer onSubmit={onSubmit}>\n            <TweetEditor setNewTweet={setNewTweet} newTweet={newTweet} />\n            <UpdateBtnContainer>\n              <label htmlFor=\"update-tweet\">\n                <FontAwesomeIcon icon={faSyncAlt} />\n              </label>\n              <input\n                id=\"update-tweet\"\n                type=\"submit\"\n                value=\"Update Tweet\"\n                className=\"a11y-hidden\"\n              />\n            </UpdateBtnContainer>\n          </UpdateContainer>\n          <CancelBtn onClick={toggleEditing}>\n            <span>Cancel</span>\n            <FontAwesomeIcon icon={faPlus} className=\"icon-x\" />\n          </CancelBtn>\n        </EditContainer>\n      ) : (\n        <MessageContainer>\n          {message && (\n            <TextContainer>\n              <p>{message}</p>\n            </TextContainer>\n          )}\n          {userObj.imageUrl && (\n            <ImageContainer>\n              <img src={userObj.imageUrl} alt=\"uploaded file\" />\n            </ImageContainer>\n          )}\n          {isOwner && (\n            <BtnContainer>\n              <button onClick={onDeleteClick}>\n                <span className=\"a11y-hidden\">Delete Tweet</span>\n                <FontAwesomeIcon icon={faTrash} />\n              </button>\n              <button onClick={toggleEditing}>\n                <span className=\"a11y-hidden\">Edit Tweet</span>\n                <FontAwesomeIcon icon={faEdit} />\n              </button>\n            </BtnContainer>\n          )}\n        </MessageContainer>\n      )}\n    </li>\n  );\n};\n\nexport default Tweet;\n","import { useState } from 'react';\nimport { getDownloadURL, ref, uploadString } from 'firebase/storage';\nimport { addDoc, collection } from 'firebase/firestore';\nimport { dbService, storageService } from 'myFirebase';\nimport { v4 } from 'uuid';\nimport styled from 'styled-components';\nimport { calcRem, colors } from 'theme/theme';\nimport { a11yHidden } from 'styles/mixin';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\n\nconst TweetFormContainer = styled.form`\n  width: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .a11y-hidden {\n    ${a11yHidden}\n  }\n`;\n\nconst MentionContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ImageUploadContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: ${calcRem(16)} 0;\n  color: ${colors.blue};\n  font-size: ${calcRem(14)};\n\n  label {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    span {\n      margin-right: ${calcRem(8)};\n    }\n  }\n`;\n\nconst MentionInput = styled.input`\n  width: 100%;\n  flex-grow: 1;\n`;\n\nconst SubmitBtnContainer = styled.div`\n  background: ${colors.blue};\n  width: ${calcRem(40)};\n  height: ${calcRem(40)};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 ${calcRem(8)};\n\n  .icon-twitter {\n    width: 100%;\n    color: ${colors.white};\n  }\n\n  :hover {\n    background: ${colors.white};\n    .icon-twitter {\n      color: ${colors.blue};\n    }\n  }\n`;\n\nconst SelectedImageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: ${calcRem(16)} 0;\n\n  img {\n    width: ${calcRem(240)};\n    height: auto;\n  }\n`;\n\nconst ClearBtn = styled.button`\n  background: transparent;\n  color: ${colors.blue};\n  border: transparent;\n  cursor: pointer;\n\n  .icon-x {\n    transform: rotate(45deg);\n    margin: auto 0 auto ${calcRem(8)};\n  }\n\n  :hover,\n  :active {\n    border: transparent;\n    outline: transparent;\n  }\n`;\n\nconst TweetForm = ({ userObj }) => {\n  const [tweet, setTweet] = useState('');\n  const [imgFile, setImgFile] = useState('');\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    let imageUrl = '';\n\n    if (imgFile !== '') {\n      // file에 대한 reference 생성 (reference에서 폴더 생성 가능)\n      // 두번째 인수 : 이미지의 path\n      const fileRef = ref(storageService, `${userObj.uid}/${v4()}`);\n      // storage 참조 경로로 파일 업로드\n      const response = await uploadString(fileRef, imgFile, 'data_url');\n      // getDownloadURL(response.ref) : 이미지가 저장된 URL 반환\n      imageUrl = await getDownloadURL(response.ref);\n    }\n\n    const newTweetPosting = {\n      tweet,\n      createAt: Date.now(),\n      creatorId: userObj.uid, // 누가 트위터를 올린 유저인지 확인 가능\n      imageUrl,\n    };\n\n    try {\n      const docRef = await addDoc(\n        collection(dbService, 'tweets'),\n        newTweetPosting\n      );\n      console.log('Document witten with ID : ', docRef.id);\n    } catch (error) {\n      console.error('Error adding document : ', error);\n    }\n\n    setTweet('');\n    setImgFile('');\n  };\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setTweet(value);\n  };\n\n  // 이미지는 한 장만 업로드 가능\n  const onFileChange = (e) => {\n    const { files } = e.target;\n    // input으로 들어온 모든 파일 중 첫번째 이미지만 선택되도록 설정\n    const myImage = files[0];\n    // reader를 만들고 eventListener 추가\n    const reader = new FileReader();\n\n    // 파일 로딩이 종료되면 finishedEvent를 가져온다.\n    reader.onloadend = (finishedEvent) => {\n      const { result } = finishedEvent.currentTarget;\n      setImgFile(result);\n    };\n\n    reader.readAsDataURL(myImage);\n  };\n\n  const clearPhoto = () => {\n    setImgFile('');\n  };\n\n  return (\n    <TweetFormContainer onSubmit={onSubmit}>\n      <MentionContainer>\n        <MentionInput\n          type=\"text\"\n          name=\"upload-tweet\"\n          value={tweet}\n          onChange={onChange}\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <SubmitBtnContainer>\n          <label htmlFor=\"submit-tweet\">\n            <FontAwesomeIcon icon={faTwitter} className=\"icon-twitter\" />\n          </label>\n          <input\n            id=\"submit-tweet\"\n            type=\"submit\"\n            value=\"tweet\"\n            className=\"a11y-hidden\"\n          />\n        </SubmitBtnContainer>\n      </MentionContainer>\n      <ImageUploadContainer>\n        <label htmlFor=\"upload-image\">\n          <span>Upload Image</span>\n          <FontAwesomeIcon icon={faPlus} />\n        </label>\n        <input\n          id=\"upload-image\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onFileChange}\n          className=\"a11y-hidden\"\n        />\n        {imgFile && (\n          <SelectedImageContainer>\n            <img src={imgFile} alt=\"uploaded file\" />\n            <ClearBtn onClick={clearPhoto}>\n              <span>Clear</span>\n              <FontAwesomeIcon icon={faPlus} className=\"icon-x\" />\n            </ClearBtn>\n          </SelectedImageContainer>\n        )}\n      </ImageUploadContainer>\n    </TweetFormContainer>\n  );\n};\n\nexport default TweetForm;\n","import { useState, useEffect } from 'react';\r\nimport { dbService } from 'myFirebase';\r\nimport { collection, query, onSnapshot, orderBy } from 'firebase/firestore';\r\nimport Tweet from 'components/Tweet';\r\nimport TweetForm from 'components/TweetForm';\r\nimport styled from 'styled-components';\r\nimport { calcRem, deviceSizes } from 'theme/theme';\r\nimport { a11yHidden } from 'styles/mixin';\r\n\r\nconst HomeContainer = styled.div`\r\n  width: ${deviceSizes.mobile};\r\n  /* position: relative; */\r\n  /* display: flex;\r\n  flex-direction: column; */\r\n  /* align-items: center;\r\n  justify-content: center; */\r\n  margin: 0 ${calcRem(32)};\r\n\r\n  .a11y-hidden {\r\n    ${a11yHidden}\r\n  }\r\n`;\r\n\r\nconst TweetContainer = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* align-items: center;\r\n  justify-content: center; */\r\n`;\r\n\r\nfunction Home({ userObj }) {\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(dbService, 'tweets'),\r\n      orderBy('createAt', 'desc')\r\n    );\r\n\r\n    onSnapshot(q, (snapshot) => {\r\n      const tweetArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      setTweets(tweetArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <HomeContainer>\r\n      <h1 className=\"a11y-hidden\">Home</h1>\r\n      <TweetForm userObj={userObj} />\r\n      <TweetContainer>\r\n        {tweets.map((twt) => {\r\n          return (\r\n            <Tweet\r\n              userObj={twt}\r\n              key={twt.id}\r\n              message={twt.tweet}\r\n              isOwner={twt.creatorId === userObj.uid}\r\n            />\r\n          );\r\n        })}\r\n      </TweetContainer>\r\n    </HomeContainer>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { calcRem, colors, deviceSizes } from 'theme/theme';\n\nconst NavList = styled.ul`\n  display: flex;\n  width: ${deviceSizes.mobile};\n  align-items: center;\n  justify-content: center;\n`;\n\nconst NavItemContainer = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin: ${calcRem(8)};\n  align-items: center;\n  font-weight: bold;\n`;\n\nconst IconContainer = styled.div`\n  color: ${colors.blue};\n  height: ${calcRem(8)};\n  margin-bottom: ${calcRem(32)};\n`;\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <NavList>\n        <NavItemContainer>\n          <IconContainer>\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n          </IconContainer>\n          <Link to=\"/\">Home</Link>\n        </NavItemContainer>\n        <NavItemContainer>\n          <IconContainer>\n            <FontAwesomeIcon icon={faUser} size=\"2x\" />\n          </IconContainer>\n          <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n        </NavItemContainer>\n      </NavList>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst NavContainer = styled.ul`\n  display: flex;\n  align-items: center;\n  margin: auto;\n`;\n\nconst NavItemContainer = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem;\n  align-items: center;\n`;\nconst UnauthenticatedNav = () => {\n  return (\n    <nav>\n      <NavContainer>\n        <NavItemContainer>\n          <FontAwesomeIcon icon={faTwitter} color={'#04AAFF'} size=\"2x\" />\n          <Link to=\"/\" />\n        </NavItemContainer>\n      </NavContainer>\n    </nav>\n  );\n};\n\nexport default UnauthenticatedNav;\n","import { useState, useEffect } from 'react';\nimport { getAuth, signOut, updateProfile } from 'firebase/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { dbService } from 'myFirebase';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport styled from 'styled-components';\nimport { calcRem, colors } from 'theme/theme';\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 0 ${calcRem(32)};\n`;\n\nconst ProfileUpdateContainer = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ProfileInput = styled.input`\n  flex-grow: 1;\n  width: 100%;\n  margin-bottom: ${calcRem(8)};\n`;\n\nconst ProfileUpdateBtn = styled.input`\n  width: 100%;\n  background: ${colors.blue};\n  color: ${colors.white};\n  margin-bottom: ${calcRem(32)};\n\n  &:hover {\n    background: ${colors.white};\n    color: ${colors.blue};\n  }\n`;\nconst LogOutBtn = styled.button`\n  width: 100%;\n  background: ${colors.red};\n  color: ${colors.white};\n  border: 1px solid transparent;\n\n  &:hover {\n    box-sizing: border-box;\n    background: ${colors.white};\n    color: ${colors.red};\n    border: 1px solid ${colors.red};\n  }\n`;\n\nfunction Profile({ userObj, refreshUser }) {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const navigate = useNavigate();\n  const auth = getAuth();\n  // userObj.displayName === auth.currentUser.displayName\n\n  const onLogOutClick = () => {\n    signOut(auth);\n    navigate('/');\n  };\n\n  const getMyTweets = async () => {\n    const q = query(\n      collection(dbService, 'tweets'),\n      // 필터링\n      where('creatorId', '==', userObj.uid)\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n      console.log(doc.id, '=>', doc.data());\n    });\n  };\n\n  useEffect(() => {\n    getMyTweets();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = (e) => {\n    const { value } = e.target;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      if (userObj.displayName === null) {\n        await updateProfile(userObj, { displayName: 'Anonymous' });\n      }\n      await updateProfile(userObj, { displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  return (\n    <ProfileContainer>\n      <h1>{userObj.displayName}'s Profile</h1>\n      <ProfileUpdateContainer onSubmit={onSubmit}>\n        <ProfileInput\n          type=\"text\"\n          onChange={onChange}\n          value={newDisplayName}\n          placeholder=\"Display Name\"\n        />\n        <ProfileUpdateBtn type=\"submit\" value=\"Update Profile\" />\n      </ProfileUpdateContainer>\n      <LogOutBtn onClick={onLogOutClick}>Log out</LogOutBtn>\n    </ProfileContainer>\n  );\n}\n\nexport default Profile;\n","import { Route, Routes } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Navigation from 'components/Navigation';\nimport UnauthenticatedNav from 'components/UnauthenticatedNav';\nimport Profile from 'routes/Profile';\nimport styled from 'styled-components';\n\nconst NavContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <>\n      <NavContainer>\n        {isLoggedIn ? <Navigation userObj={userObj} /> : <UnauthenticatedNav />}\n      </NavContainer>\n      <Routes>\n        {isLoggedIn ? (\n          <Route path=\"/\" element={<Home userObj={userObj} />} />\n        ) : (\n          <Route path=\"/\" element={<Auth />} />\n        )}\n        <Route\n          path=\"/profile\"\n          element={<Profile userObj={userObj} refreshUser={refreshUser} />}\n        />\n      </Routes>\n    </>\n  );\n};\n\nexport default AppRouter;\n","import { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport styled from 'styled-components';\nimport { calcRem } from 'theme/theme';\n\nconst FooterContainer = styled.footer`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: ${calcRem(32)};\n`;\n\nconst Copyright = styled.p`\n  margin: ${calcRem(16)} 0;\n`;\n\nconst Footer = () => {\n  const ThisYear = new Date().getFullYear();\n\n  return (\n    <FooterContainer>\n      <a\n        href=\"https://github.com/green9930\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <FontAwesomeIcon icon={faGithub} />\n        green9930\n      </a>\n      <Copyright>&copy;twitter_clone {ThisYear} </Copyright>\n    </FooterContainer>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport Footer from 'components/Footer';\nimport { authService } from 'myFirebase';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  const [newUserName, setNewUserName] = useState(''); // 프로필 이름 업데이트용\n\n  useEffect(() => {\n    authService.onAuthStateChanged(async (user) => {\n      if (user) {\n        if (user.displayName === null) {\n          user.updateProfile({\n            displayName: 'User',\n          });\n        }\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    setNewUserName(authService.currentUser.displayName);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        'Initializing...'\n      )}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport { calcRem, colors } from 'theme/theme';\n\nconst GlobalStyle = createGlobalStyle`\n\n  html {\n    font-size: 16px;\n  }\n  \n  body {\n    margin: 0 auto;\n    box-sizing: border-box;\n    display: flex;\n    justify-content: center;\n  }\n  \n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  ul, li {\n    list-style: none;\n    padding: 0px;\n  }\n\n  button {\n    border-radius: ${calcRem(32)};\n    padding: ${calcRem(8)};\n  }\n\n  input {\n    box-sizing: border-box;\n    padding: ${calcRem(8)};\n    border: 1px solid ${colors.blue};\n    border-radius: ${calcRem(32)};\n\n    :focus {\n      outline: none;\n      border: 2px solid ${colors.blue};\n    }\n  }\n\n  button:focus,\n  a:focus {\n    outline: 1px solid ${colors.blue}\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport GlobalStyle from 'styles/GlobalStyle';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}